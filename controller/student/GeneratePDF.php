<?php declare(strict_types=1);

namespace modules\subjects\controller\student;

use modules\subjects\controller\Controller;
use Slim\Http\Request;
use Slim\Http\Response;

class GeneratePDF extends Controller
{
    public function __invoke(Request $request, Response $response, $args)
    {
        
        $supVersion = $this->container->settings['public']['version'];

        $pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

        
        $pdf->SetCreator('Generated by SUPi');
        $pdf->SetAuthor('SUPi v' . $supVersion);
        $pdf->SetTitle('SUPi - Optional Subjects');
        $pdf->SetSubject('List export');

        $pdf->sendHeaderData([
            'supVersion' => $supVersion,
            'title' => 'Volitelné předměty',
            'version' => '2020',
            'page' => 'Strana'
        ]);

        $pdf->SetMargins(PDF_MARGIN_LEFT, 25+14, PDF_MARGIN_RIGHT);
        $pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
        $pdf->SetFooterMargin(PDF_MARGIN_FOOTER);

        $pdf->SetAutoPageBreak(TRUE, 30);

        $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

        // set font
        $pdf->SetFont('times', 'BI', 12);

        // add a page
        $pdf->AddPage();

        // set some text to print
        $txt = <<<EOD
        TCPDF Example 003

        Custom page header and footer are defined by extending the TCPDF class and overriding the Header() and Footer() methods.
EOD;

        // print a block of text using Write()
        $pdf->Write(0, $txt, '', 0, 'C', true, 0, false, false, 0);

        $response->getBody()->write($pdf->Output('example_001.pdf', 'S'));

        return $response->withHeader('Content-Type', 'application/pdf')
            ->withHeader('Cache-Control', 'private, must-revalidate, post-check=0, pre-check=0, max-age=1')
            ->withHeader('Pragma', 'public')
            ->withHeader('Expires', 'Sat, 26 Jul 1997 05:00:00 GMT')
            ->withHeader('Last-Modified', gmdate('D, d M Y H:i:s') . ' GMT')
            ->withHeader('Content-Disposition', 'inline; filename="'.basename('ble').'"');

    }
}

class MYPDF extends \TCPDF {

    protected $headerAPI;

    public function sendHeaderData($data) {
        $this->headerAPI = $data;
    }

    public function Header() {
        // dejavusansextralight
        // dejavusans
        // dejavusanscondensed

        $topText = '<span>' . date("d. m. Y") . ' – <b>SUPi</b> v' . $this->headerAPI['supVersion'] . '</span>';

        $header = $this->startTemplate(180, 25);

            $barcodeStyle = [
                'position' => '',
                'align' => 'R',
                'stretch' => false,
                'fitwidth' => false,
                'border' => false,
                'hpadding' => 0,
                'vpadding' => 0,
                'fgcolor' => [0,0,0],
                'bgcolor' => false
            ];

            $this->SetFont('dejavusansextralight', '', 20);
            $this->Cell(85, 11, $this->headerAPI['title'], false, 1, '', false, '', 0, false, 'T', 'B');

            $this->SetFont('dejavusans', 'B', 20);
            $this->Cell(0, 2, $this->headerAPI['version'], false, 1);

            $this->SetFont('dejavusans', '', 8);
            $this->writeHTMLCell(0, 0, 0, 0, $topText, 0, 0, false, true, 'R');

            $this->write1DBarcode('U12345-C123456', 'C39E', 0, 4, 190, 7, 0.4, $barcodeStyle, 'L');

        $this->endTemplate();
        $this->printTemplate($header, 15, 14);
    }

    public function Footer() {

        $text = $this->headerAPI['page'] . ' ' . $this->getAliasNumPage() . '/' . $this->getAliasNbPages();
        $this->SetY(-25);
        $this->SetFont('helvetica', 'I', 8);
        $this->Cell(0, 10, $text, 0, false, 'R');
    }
}
