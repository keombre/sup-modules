<?php declare(strict_types=1);

namespace modules\subjects\controller\student;

use modules\subjects\controller\Controller;
use Slim\Http\Request;
use Slim\Http\Response;

class GeneratePDF extends Controller
{
    public function __invoke(Request $request, Response $response, $args)
    {
        
        $supVersion = $this->container->settings['public']['version'];

        $pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

        $pdf->SetCreator('Generated by SUPi');
        $pdf->SetAuthor('SUPi v' . $supVersion);
        $pdf->SetTitle('SUPi - Optional Subjects');
        $pdf->SetSubject('List export');

        $pdf->sendHeaderData([
            'supVersion' => $supVersion,
            'title' => 'Volitelné předměty',
            'version' => '2019',
            'page' => 'Strana',
            'code' => '123 - 456'
        ]);
        $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

        $pdf->SetMargins(PDF_MARGIN_LEFT, 25+16, PDF_MARGIN_RIGHT);
        $pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
        $pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
        $pdf->SetAutoPageBreak(TRUE, 60);
        
        $pdf->AddPage();
        
        $user = [
            'name' => 'Pepík Nováků',
            'class' => 'Septima A',
        ];
        $pdf->SetFont('dejavusans', '', 11);
        $userTable = <<<TEXT
<style>
.top td {
    height: 25px;
}
</style>
<table>
    <tr class="top"><td width="70">Jméno:</td><td><b>{$user['name']}</b></td></tr>
    <tr><td width="70">Třída:</td><td><b>{$user['class']}</b></td></tr>
</table>
TEXT;
        $pdf->writeHTML($userTable, true, false, false, false, '');
        
        $pdf->SetY($pdf->GetY() + 5);
        $pdf->SetFont('dejavusans', '', 12);

        $pdf->writeTable(['ble', 'hle', 'kle', 'mle'], [
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
            ['hola', 'bolable', 1, 5],
        ], [25, 50, 10, 15]);
        
        $pdf->lastPage();

        $style = [
            'width' => 0.2,
            'color' => [0, 0, 0]
        ];
        $pdf->Line(20, 229, 100, 229, $style);
        $pdf->setY(230);
        $pdf->setX(20);
        $pdf->SetFont('dejavusans', 'I', 10);
        $pdf->Cell(80, 0, 'Podpis', false, 0, 'C');

        $response->getBody()->write($pdf->Output('example_001.pdf', 'S'));

        return $response->withHeader('Content-Type', 'application/pdf')
            ->withHeader('Cache-Control', 'private, must-revalidate, post-check=0, pre-check=0, max-age=1')
            ->withHeader('Pragma', 'public')
            ->withHeader('Expires', 'Sat, 26 Jul 1997 05:00:00 GMT')
            ->withHeader('Last-Modified', gmdate('D, d M Y H:i:s') . ' GMT')
            ->withHeader('Content-Disposition', 'inline; filename="'.basename('ble').'"');

    }
}

class MYPDF extends \TCPDF {

    protected $headerAPI;

    public function sendHeaderData($data) {
        $this->headerAPI = $data;
    }

    public function Header() {
        // dejavusansextralight
        // dejavusans
        // dejavusanscondensed

        $topText = '<span>' . date("d. m. Y") . ' – <b>SUPi</b> v' . $this->headerAPI['supVersion'] . '</span>';

        $header = $this->startTemplate(180, 25);

            $barcodeStyle = [
                'position' => '',
                'align' => 'R',
                'stretch' => false,
                'fitwidth' => false,
                'border' => false,
                'hpadding' => 0,
                'vpadding' => 0,
                'fgcolor' => [0,0,0],
                'bgcolor' => false
            ];

            $this->SetFont('dejavusansextralight', '', 20);
            $this->Cell(85, 11, $this->headerAPI['title'], false, 1, '', false, '', 0, false, 'T', 'B');

            $this->SetFont('dejavusans', 'B', 20);
            $this->Cell(0, 2, $this->headerAPI['version'], false, 1);

            $this->SetFont('dejavusans', '', 8);
            $this->writeHTMLCell(0, 0, 0, 0, $topText, 0, 0, false, true, 'R');

            $this->write1DBarcode('U12345-C123456', 'C39E', 0, 4, 190, 7, 0.4, $barcodeStyle, 'L');

        $this->endTemplate();
        $this->printTemplate($header, 15, 14);
    }

    public function Footer() {

        $qrStyle = [
            'border' => 0,
            'vpadding' => 0,
            'hpadding' => 0,
            'fgcolor' => array(0,0,0),
            'bgcolor' => false, //array(255,255,255)
            'module_width' => 1, // width of a single module in points
            'module_height' => 1 // height of a single module in points
        ];
        $text = $this->headerAPI['page'] . ' ' . $this->getAliasNumPage() . '/' . $this->getAliasNbPages();
        $this->SetY(-25);
        $this->SetFont('helvetica', 'I', 8);
        $this->Cell(150, 10, $text, false, 0, 'L');

        $this->SetY(-54);
        $this->SetX(165);

        $this->SetFont('helvetica', 'B', 11);
        $this->Cell(30, 5, $this->headerAPI['code'], false, 0, 'C');
        $this->write2DBarcode('http://sup.localhost/subjects/teacher/accept/123456', 'QRCODE,M', 165, 248, 45, 45, $qrStyle, '');
    }

    public function writeTable($header, $data, $sizing)
    {
        
        $tbl = <<<TEXT
<style>
.thead td {
    border-bottom: 1px solid black;
}
.tbody td {
    border-top: 1px solid #aaa;
    height: 30px;
}
table {
    padding: 0 0 0 10;
}
</style>
<table>
<thead><tr class="thead">
TEXT;
        foreach ($header as $id => $hentry) {
            $tbl .= '<td width="' . $sizing[$id] . '%"><b>' . $hentry . '</b></td>'.PHP_EOL;
        }
        $tbl .= '</tr></thead>'.PHP_EOL;
        foreach ($data as $line) {
            $tbl .= '<tr class="tbody" nobr="true">'.PHP_EOL;
            foreach ($line as $id => $entry) {
                $tbl .= '<td width="' . $sizing[$id] . '%">' . $entry . '</td>'.PHP_EOL;
            }
            $tbl .= '</tr>'.PHP_EOL;
        }
        $tbl .= '</table>'.PHP_EOL;

        $this->writeHTML($tbl, true, false, false, false, '');
    }
}
